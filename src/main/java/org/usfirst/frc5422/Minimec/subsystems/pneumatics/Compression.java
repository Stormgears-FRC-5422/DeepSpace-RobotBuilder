// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5422.Minimec.subsystems.pneumatics;


import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Compressor;
import org.usfirst.frc5422.Minimec.commands.Pneumatics.RunCompressor;
import org.usfirst.frc5422.utils.StormProp;


/**
 *
 */
public class Compression extends Subsystem {
    private boolean m_hasCycled = false;
    private boolean running = true;
    private Compressor mainCompressor;

    public Compression() {
        mainCompressor = new Compressor(StormProp.getInt("CompressorModuleId"));
        addChild("MainCompressor",mainCompressor);
        mainCompressor.setClosedLoopControl(false);
    }

    @Override
    public void initDefaultCommand() {
        setDefaultCommand(new RunCompressor());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        if (running && !m_hasCycled) {
            if (mainCompressor.enabled() == false) m_hasCycled = true;
        }
    }

    // We don't want to run the venturi until the compressor has cycled once
    public boolean hasCycled() {return m_hasCycled;}

    public void reset() {
        m_hasCycled = false;
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void startCompressor() {
        running = true;
        mainCompressor.setClosedLoopControl(true);
        mainCompressor.start();
        boolean enabled = mainCompressor.enabled();
        System.out.println("Compressor status: " + enabled);
        boolean pressureValue = mainCompressor.getPressureSwitchValue();
        System.out.println("Compressor value: " + pressureValue);
        double current = mainCompressor.getCompressorCurrent();
        System.out.println("Compressor current: " + current);
    }

    public void stopCompressor(){
        mainCompressor.setClosedLoopControl(false);
        boolean off = !mainCompressor.enabled();
        System.out.println("Compressor off: " + off);
        running = false;
    }
}
