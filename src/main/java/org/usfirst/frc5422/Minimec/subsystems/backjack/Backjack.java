package org.usfirst.frc5422.Minimec.subsystems.backjack;

// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.command.Subsystem;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.Relay;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Relay.Value;

/**
 *
 */
public class Backjack extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Spark jackSpark;


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DigitalOutput jackDIO;
    private int levelGoingTo;

    public Backjack() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        jackSpark = new Spark(0);  // TODO magic number
        addChild("JackSpark",jackSpark);
        jackSpark.setInverted(false);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        jackDIO = new DigitalOutput(0);  // TODO magic number
        levelGoingTo = 0;  // todo this should be a parameter or otherwise controlled
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        // TODO - hold jack command?
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
    }

    public void setSpeed(double speed) {
        jackSpark.set(speed);
    }

    public void move() {
        setLevel(levelGoingTo);
        if(levelGoingTo == 0) {
            // Retract
            jackSpark.set(-0.5);
        }
        else {
            // Extend
            jackSpark.set(0.5);
        }
    }

    public void setLevel(int switchValue) {
        levelGoingTo = switchValue;

        // The DIO controls whether or not the level 2 limit switch is activated
        if(switchValue == 2) {
            jackDIO.set(true);
        }
        else if(switchValue == 3) {
            jackDIO.set(false);
        }
        else {
            jackDIO.set(false);
        }


    }
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
